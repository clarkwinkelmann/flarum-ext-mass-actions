{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@clarkwinkelmann/mass-actions/webpack/bootstrap","webpack://@clarkwinkelmann/mass-actions/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/mass-actions/webpack/runtime/define property getters","webpack://@clarkwinkelmann/mass-actions/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/mass-actions/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@clarkwinkelmann/mass-actions/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/Component']\"","webpack://@clarkwinkelmann/mass-actions/./src/forum/components/Checkbox.ts","webpack://@clarkwinkelmann/mass-actions/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/mass-actions/./src/forum/utils/SelectState.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/addDiscussionControls.ts","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@clarkwinkelmann/mass-actions/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@clarkwinkelmann/mass-actions/./src/forum/components/IconButton.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/index.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/patchCoreComponents.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/addDiscussionActions.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/utils/proxyModels.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","import Component, {ComponentAttrs} from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\n\ninterface CheckboxAttrs extends ComponentAttrs {\n    state: boolean\n    onchange: () => void,\n}\n\nexport default class Checkbox extends Component<CheckboxAttrs> {\n    view() {\n        return m('.MassSelectControl', {\n            className: this.attrs.state ? 'checked' : '',\n            role: 'checkbox',\n            onclick: this.attrs.onchange,\n        }, icon(this.attrs.state ? 'fas fa-check-square' : 'far fa-square'));\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Model from 'flarum/common/Model';\nimport app from 'flarum/forum/app';\n\nexport default class SelectState {\n    type: string\n    ids: string[] = []\n\n    constructor(type: string) {\n        this.type = type;\n    }\n\n    private indexOf(model: Model) {\n        return this.ids.indexOf(model.id() || '');\n    }\n\n    contains(model: Model): boolean {\n        return this.indexOf(model) !== -1;\n    }\n\n    toggle(model: Model): void {\n        if (!model.id()) {\n            throw 'Missing ID in model';\n        }\n\n        const index = this.indexOf(model);\n\n        if (index === -1) {\n            this.ids.push(model.id()!);\n        } else {\n            this.ids.splice(index, 1);\n        }\n    }\n\n    add(model: Model): void {\n        if (!model.id()) {\n            throw 'Missing ID in model';\n        }\n\n        if (!this.contains(model)) {\n            this.ids.push(model.id()!);\n        }\n    }\n\n    clear(): void {\n        this.ids = [];\n    }\n\n    count(): number {\n        return this.ids.length;\n    }\n\n    private callbackWithModel<T = void>(callback: (model: Model) => T): (id: string) => T {\n        return (id: string) => {\n            return callback(app.store.getById(this.type, id)!);\n        }\n    }\n\n    forEach(callback: (model: Model) => void): void {\n        this.ids.forEach(this.callbackWithModel(callback));\n    }\n\n    forEachPromise(callback: (model: Model) => Promise<any>): Promise<any> {\n        return Promise.all(this.ids.map(this.callbackWithModel(callback)));\n    }\n\n    some(callback: (model: Model) => boolean): boolean {\n        return this.ids.some(this.callbackWithModel<boolean>(callback));\n    }\n\n    all(): Model[] {\n        return this.ids.map(id => app.store.getById(this.type, id)!);\n    }\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport Button from 'flarum/common/components/Button';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport icon from 'flarum/common/helpers/icon';\nimport listItems from 'flarum/common/helpers/listItems';\nimport Checkbox from './components/Checkbox';\nimport SelectState from './utils/SelectState';\n\nfunction selectAllDiscussions() {\n    app.discussions.getPages().forEach(page => {\n        page.items.forEach(discussion => {\n            app.current.get('mass-select')!.add(discussion);\n        });\n    });\n}\n\nexport default function () {\n    extend(IndexPage.prototype, 'viewItems', function (items) {\n        if (!app.forum.attribute('massControls')) {\n            return;\n        }\n\n        const controls = new ItemList();\n\n        let iconName = 'far fa-square';\n        const count = app.current.get('mass-select')!.count();\n\n        if (count > 0) {\n            if (count === app.discussions.getPages().reduce((total, page) => total + page.items.length, 0)) {\n                iconName = 'fas fa-check-square';\n            } else {\n                iconName = 'fas fa-minus-square';\n            }\n        }\n\n        controls.add('all', Button.component({\n            onclick() {\n                selectAllDiscussions();\n            },\n        }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.all')));\n\n        controls.add('clear', Button.component({\n            onclick() {\n                app.current.get('mass-select')!.clear();\n            },\n        }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.none')));\n\n        // We don't use Flarum's SplitDropdown because the children of the first button aren't redrawing properly\n        items.add('mass-select', m('.ButtonGroup.Dropdown.Dropdown--split.dropdown', {}, [\n            Button.component({\n                className: 'Button SplitDropdown-button MassSelectControl' + (count > 0 ? ' checked' : ''),\n                onclick() {\n                    if (app.current.get('mass-select')!.count() === 0) {\n                        selectAllDiscussions();\n                    } else {\n                        app.current.get('mass-select')!.clear();\n                    }\n                },\n            }, icon(iconName)),\n            m('button.Dropdown-toggle.Button.Button--icon', {\n                'data-toggle': 'dropdown',\n            }, icon('fas fa-caret-down', {className: 'Button-caret'})),\n            m('ul.Dropdown-menu.dropdown-menu', listItems(controls.toArray())),\n        ]), 100);\n    });\n\n    extend(DiscussionListItem.prototype, 'view', function (vdom) {\n        // Only add the checkboxes on the index page, not the drawer\n        if (!app.current.matches(IndexPage) || !app.forum.attribute('massControls')) {\n            return;\n        }\n\n        vdom.children.forEach(vdom => {\n            if (vdom && vdom.attrs && vdom.attrs.className && vdom.attrs.className.indexOf('DiscussionListItem-content') !== -1) {\n                const state = app.current.get('mass-select')!;\n\n                vdom.children.unshift(m('.DiscussionListItem-select', Checkbox.component({\n                    state: state.contains(this.attrs.discussion),\n                    onchange: () => {\n                        state.toggle(this.attrs.discussion);\n                    },\n                })));\n            }\n        });\n    });\n\n    extend(DiscussionListItem.prototype, 'oninit', function () {\n        this.subtree!.check(() => app.current.get('mass-select')?.contains(this.attrs.discussion));\n    });\n\n    extend(DiscussionListItem.prototype, 'elementAttrs', function (attrs) {\n        if (app.current.get('mass-select')?.contains(this.attrs.discussion)) {\n            attrs.className += ' DiscussionListItem--selected';\n        }\n    });\n\n    extend(IndexPage.prototype, 'oninit', function () {\n        app.current.set('mass-select', new SelectState('discussions'));\n    });\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import {ClassComponent, Vnode} from 'mithril';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport Button from 'flarum/common/components/Button';\n\ninterface IconButtonAttrs {\n    title: any\n    icon: string\n    onclick: () => void\n    disabled?: boolean\n}\n\n/**\n * Since every one of our buttons will need a tooltip and same class name, a re-usable component makes sense\n * Particularly because the title text needs to be injected in 2 places\n */\nexport default class IconButton implements ClassComponent<IconButtonAttrs> {\n    view(vnode: Vnode<IconButtonAttrs, this>) {\n        return Tooltip.component({\n            text: vnode.attrs.title,\n        }, Button.component({\n            'aria-label': vnode.attrs.title,\n            icon: vnode.attrs.icon,\n            className: 'Button Button--icon',\n            onclick: vnode.attrs.onclick,\n            disabled: vnode.attrs.disabled,\n        }));\n    }\n}\n","import app from 'flarum/forum/app';\nimport patchCoreComponents from './patchCoreComponents';\nimport addDiscussionControls from './addDiscussionControls';\nimport addDiscussionActions from './addDiscussionActions';\n\napp.initializers.add('mass-actions', () => {\n    patchCoreComponents();\n    addDiscussionControls();\n    addDiscussionActions();\n});\n","import {extend} from 'flarum/common/extend';\nimport Dropdown from 'flarum/common/components/Dropdown';\n\nexport default function () {\n    // Flarum's Dropdown component doesn't support disabled state out of the box\n    extend(Dropdown.prototype, 'getButton', function (vnode) {\n        // @ts-ignore\n        vnode.attrs.disabled = this.attrs.disabled;\n    });\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport Button from 'flarum/common/components/Button';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport proxyModels from './utils/proxyModels';\nimport IconButton from './components/IconButton';\n\nexport default function () {\n    extend(IndexPage.prototype, 'actionItems', function (items) {\n        const select = app.current.get('mass-select');\n        if (!select || select.count() === 0) {\n            return;\n        }\n\n        // Remove global actions\n        items.remove('refresh');\n        items.remove('markAllAsRead');\n\n        items.add('mass-markAsRead', m(IconButton, {\n            title: app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.markAsRead'),\n            icon: 'fas fa-check',\n            onclick() {\n                select.forEachPromise(discussion => {\n                    // Same code as in DiscussionListItem\n                    if (discussion.isUnread()) {\n                        return discussion.save({lastReadPostNumber: discussion.lastPostNumber()});\n                    }\n\n                    return Promise.resolve();\n                }).then(() => {\n                    m.redraw();\n                });\n            },\n        }));\n\n        if (app.forum.attribute('canHideDiscussionsSometime')) {\n            const anyHidden = select.some(discussion => {\n                return discussion.isHidden();\n            });\n\n            items.add('mass-hide', m(IconButton, {\n                title: anyHidden ? app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.restore') : app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.hide'),\n                icon: anyHidden ? 'fas fa-reply' : 'fas fa-trash-alt',\n                onclick() {\n                    select.forEachPromise(discussion => {\n                        if (!discussion.canHide()) {\n                            return Promise.resolve();\n                        }\n\n                        if (anyHidden) {\n                            return DiscussionControls.restoreAction.call(discussion);\n                        } else {\n                            return DiscussionControls.hideAction.call(discussion);\n                        }\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n                disabled: !select.some(discussion => {\n                    return discussion.canHide();\n                }),\n            }));\n        }\n\n        if (app.forum.attribute('canLockDiscussionsSometime')) {\n            const anyLocked = select.some(discussion => {\n                return discussion.attribute('isLocked');\n            });\n\n            items.add('mass-lock', m(IconButton, {\n                title: anyLocked ? app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.unlock') : app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.lock'),\n                icon: anyLocked ? 'fas fa-unlock' : 'fas fa-lock',\n                onclick() {\n                    select.forEachPromise(discussion => {\n                        if (!discussion.attribute('canLock')) {\n                            return Promise.resolve();\n                        }\n\n                        // Re-implement DiscussionControls.lockAction to force lock or unlock instead of toggling\n                        return discussion.save({isLocked: !anyLocked});\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n                disabled: !select.some(discussion => {\n                    return discussion.attribute('canLock');\n                }),\n            }));\n        }\n\n        if (app.forum.attribute('canTagDiscussionsSometime')) {\n            items.add('mass-tags', Dropdown.component({\n                buttonClassName: 'Button',\n                label: app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.tags'),\n                disabled: !select.some(discussion => {\n                    return discussion.attribute('canTag');\n                }),\n            }, [\n                Button.component({\n                    onclick() {\n                        app.modal.show(flarum.core.compat['tags/forum/components/TagDiscussionModal'], {\n                            discussion: proxyModels(select.all()),\n                        });\n                    },\n                }, app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.tags-edit')),\n                app.store.all('tags').map(tag => Button.component({\n                    onclick() {\n                        select.forEachPromise(discussion => {\n                            if (!discussion.attribute('canTag')) {\n                                return Promise.resolve();\n                            }\n\n                            const tags = discussion.tags() || [];\n\n                            // If discussion already has this tag, skip\n                            if (tags.some(thisTag => thisTag.id() === tag.id())) {\n                                return Promise.resolve();\n                            }\n\n                            tags.push(tag);\n\n                            return discussion.save({relationships: {tags}})\n                        }).then(() => {\n                            m.redraw();\n                        });\n                    },\n                }, app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.tags-add', {\n                    tag: tag.name(),\n                }))),\n            ]));\n        }\n    });\n}\n","import Model from 'flarum/common/Model';\n\nexport default function proxyModels(models: Model[]) {\n    return new Proxy(models[0], {\n        get(target, prop, receiver) {\n            if (prop === 'save') {\n                return (attributes: any, options = {}) => {\n                    return Promise.all(models.map(model => model.save({...attributes}, {...options})));\n                };\n            }\n\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","Checkbox","subClass","superClass","create","constructor","view","m","className","this","attrs","state","role","onclick","onchange","icon","Component","SelectState","type","ids","indexOf","model","id","contains","toggle","index","push","splice","add","clear","count","length","callbackWithModel","callback","app","forEach","forEachPromise","Promise","all","map","some","selectAllDiscussions","page","items","discussion","_extends","assign","target","i","arguments","source","apply","IconButton","vnode","Tooltip","text","title","Button","disabled","extend","Dropdown","IndexPage","controls","ItemList","iconName","reduce","total","listItems","toArray","DiscussionListItem","vdom","children","unshift","component","subtree","check","select","remove","isUnread","save","lastReadPostNumber","lastPostNumber","resolve","then","redraw","anyHidden","isHidden","canHide","DiscussionControls","anyLocked","attribute","isLocked","buttonClassName","label","models","Proxy","receiver","attributes","options","Reflect","tag","tags","thisTag","relationships","name"],"sourceRoot":""}