{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@clarkwinkelmann/mass-actions/webpack/bootstrap","webpack://@clarkwinkelmann/mass-actions/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/mass-actions/webpack/runtime/define property getters","webpack://@clarkwinkelmann/mass-actions/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/mass-actions/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@clarkwinkelmann/mass-actions/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/Component']\"","webpack://@clarkwinkelmann/mass-actions/./src/forum/components/Checkbox.ts","webpack://@clarkwinkelmann/mass-actions/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/mass-actions/./src/forum/utils/SelectState.ts","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/mass-actions/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@clarkwinkelmann/mass-actions/./src/forum/components/IconButton.ts","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/Store']\"","webpack://@clarkwinkelmann/mass-actions/./src/forum/index.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/patchCoreComponents.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/addDiscussionControls.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/addDiscussionActions.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/utils/proxyModels.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/automaticallyRemoveFromStore.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","import Component, {ComponentAttrs} from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\n\nexport interface CheckboxAttrs extends ComponentAttrs {\n    state: boolean\n    onchange: (event: MouseEvent) => void\n}\n\nexport default class Checkbox extends Component<CheckboxAttrs> {\n    view() {\n        return m('.MassSelectControl', {\n            className: this.attrs.state ? 'checked' : '',\n            role: 'checkbox',\n            onclick: this.attrs.onchange,\n        }, icon(this.attrs.state ? 'fas fa-check-square' : 'far fa-square'));\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Model from 'flarum/common/Model';\nimport app from 'flarum/forum/app';\n\nexport default class SelectState {\n    type: string\n    ids: string[] = []\n    rangeStartId: string | null = null\n\n    constructor(type: string) {\n        this.type = type;\n    }\n\n    private indexOf(model: Model) {\n        return this.ids.indexOf(model.id() || '');\n    }\n\n    contains(model: Model): boolean {\n        return this.indexOf(model) !== -1;\n    }\n\n    toggle(model: Model, shift: boolean = false): void {\n        if (!model.id()) {\n            throw 'Missing ID in model';\n        }\n\n        if (shift && this.rangeStartId) {\n            const candidates = this.allCandidates();\n            const startModel = app.store.getById(this.type, this.rangeStartId)!;\n\n            let startIndex = candidates.indexOf(startModel);\n            let endIndex = candidates.indexOf(model);\n\n            if (startIndex >= 0 && endIndex >= 0 && this.contains(startModel) !== this.contains(model)) {\n                // Allow selection in both directions, switch indexes for use in slice() below\n                if (startIndex > endIndex) {\n                    [startIndex, endIndex] = [endIndex, startIndex];\n                }\n\n                candidates.slice(startIndex, endIndex + 1).forEach((this.contains(model) ? this.remove : this.add).bind(this));\n\n                return;\n            }\n        }\n\n        const index = this.indexOf(model);\n\n        if (index === -1) {\n            this.ids.push(model.id()!);\n        } else {\n            this.ids.splice(index, 1);\n        }\n\n        this.rangeStartId = model.id()!;\n    }\n\n    add(model: Model): void {\n        if (!model.id()) {\n            throw 'Missing ID in model';\n        }\n\n        if (!this.contains(model)) {\n            this.ids.push(model.id()!);\n        }\n    }\n\n    remove(model: Model): void {\n        if (!model.id()) {\n            throw 'Missing ID in model';\n        }\n\n        const index = this.indexOf(model);\n\n        if (index !== -1) {\n            this.ids.splice(index, 1);\n        }\n    }\n\n    private allCandidates(): Model[] {\n        const items: Model[] = [];\n\n        app.discussions.getPages().forEach(page => {\n            items.push(...page.items);\n        });\n\n        return items;\n    }\n\n    addAll(filter: (model: Model) => boolean = () => true): void {\n        this.allCandidates().forEach(model => {\n            if (filter(model)) {\n                this.add(model);\n            }\n        });\n        this.rangeStartId = null;\n    }\n\n    clear(): void {\n        this.ids = [];\n        this.rangeStartId = null;\n    }\n\n    count(): number {\n        return this.ids.length;\n    }\n\n    private callbackWithModel<M extends Model = Model, T = void>(callback: (model: M) => T): (id: string) => T {\n        return (id: string) => {\n            return callback(app.store.getById(this.type, id)!);\n        }\n    }\n\n    forEach(callback: (model: Model) => void): void {\n        this.ids.forEach(this.callbackWithModel(callback));\n    }\n\n    forEachPromise<M extends Model = Model>(callback: (model: M) => Promise<any>): Promise<any> {\n        return Promise.all(this.ids.map(this.callbackWithModel<M>(callback)));\n    }\n\n    some<M extends Model = Model>(callback: (model: M) => boolean): boolean {\n        return this.ids.some(this.callbackWithModel<M, boolean>(callback));\n    }\n\n    all<M extends Model = Model>(): M[] {\n        return this.ids.map(id => app.store.getById(this.type, id)!);\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import {ClassComponent, Vnode} from 'mithril';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport Button from 'flarum/common/components/Button';\n\ninterface IconButtonAttrs {\n    title: any\n    icon: string\n    onclick: () => void\n    disabled?: boolean\n}\n\n/**\n * Since every one of our buttons will need a tooltip and same class name, a re-usable component makes sense\n * Particularly because the title text needs to be injected in 2 places\n */\nexport default class IconButton implements ClassComponent<IconButtonAttrs> {\n    view(vnode: Vnode<IconButtonAttrs, this>) {\n        return Tooltip.component({\n            text: vnode.attrs.title,\n        }, Button.component({\n            'aria-label': vnode.attrs.title,\n            icon: vnode.attrs.icon,\n            className: 'Button Button--icon',\n            onclick: vnode.attrs.onclick,\n            disabled: vnode.attrs.disabled,\n        }));\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Store'];","import app from 'flarum/forum/app';\nimport patchCoreComponents from './patchCoreComponents';\nimport addDiscussionControls from './addDiscussionControls';\nimport addDiscussionActions from './addDiscussionActions';\nimport automaticallyRemoveFromStore from './automaticallyRemoveFromStore';\n\napp.initializers.add('mass-actions', () => {\n    patchCoreComponents();\n    addDiscussionControls();\n    addDiscussionActions();\n    automaticallyRemoveFromStore();\n});\n","import {extend} from 'flarum/common/extend';\nimport Dropdown from 'flarum/common/components/Dropdown';\n\nexport default function () {\n    // Flarum's Dropdown component doesn't support disabled state out of the box\n    extend(Dropdown.prototype, 'getButton', function (vnode) {\n        // @ts-ignore\n        vnode.attrs.disabled = this.attrs.disabled;\n    });\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport Button from 'flarum/common/components/Button';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport icon from 'flarum/common/helpers/icon';\nimport listItems from 'flarum/common/helpers/listItems';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Checkbox, {CheckboxAttrs} from './components/Checkbox';\nimport SelectState from './utils/SelectState';\n\nexport default function () {\n    extend(IndexPage.prototype, 'viewItems', function (items) {\n        if (!app.forum.attribute('massControls')) {\n            return;\n        }\n\n        const controls = new ItemList();\n\n        let iconName = 'far fa-square';\n        const count = app.current.get('mass-select')!.count();\n\n        if (count > 0) {\n            if (count === app.discussions.getPages().reduce((total, page) => total + page.items.length, 0)) {\n                iconName = 'fas fa-check-square';\n            } else {\n                iconName = 'fas fa-minus-square';\n            }\n        }\n\n        controls.add('all', Button.component({\n            onclick() {\n                app.current.get('mass-select')!.addAll();\n            },\n        }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.all')));\n\n        controls.add('clear', Button.component({\n            onclick() {\n                app.current.get('mass-select')!.clear();\n            },\n        }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.none')));\n\n        controls.add('read', Button.component({\n            onclick() {\n                app.current.get('mass-select')!.clear();\n                app.current.get('mass-select')!.addAll(model => {\n                    return (model as Discussion).isRead();\n                });\n            },\n        }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.read')));\n\n        controls.add('unread', Button.component({\n            onclick() {\n                app.current.get('mass-select')!.clear();\n                app.current.get('mass-select')!.addAll(model => {\n                    return (model as Discussion).isUnread();\n                });\n            },\n        }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.unread')));\n\n        controls.add('visible', Button.component({\n            onclick() {\n                app.current.get('mass-select')!.clear();\n                app.current.get('mass-select')!.addAll(model => {\n                    return !(model as Discussion).isHidden();\n                });\n            },\n        }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.visible')));\n\n        controls.add('hidden', Button.component({\n            onclick() {\n                app.current.get('mass-select')!.clear();\n                app.current.get('mass-select')!.addAll(model => {\n                    return (model as Discussion).isHidden();\n                });\n            },\n        }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.hidden')));\n\n        if ('flarum-lock' in flarum.extensions) {\n            controls.add('locked', Button.component({\n                onclick() {\n                    app.current.get('mass-select')!.clear();\n                    app.current.get('mass-select')!.addAll(model => {\n                        return model.attribute('isLocked');\n                    });\n                },\n            }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.locked')));\n\n            controls.add('unlocked', Button.component({\n                onclick() {\n                    app.current.get('mass-select')!.clear();\n                    app.current.get('mass-select')!.addAll(model => {\n                        return !model.attribute('isLocked');\n                    });\n                },\n            }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.unlocked')));\n        }\n\n        // We don't use Flarum's SplitDropdown because the children of the first button aren't redrawing properly\n        items.add('mass-select', m('.ButtonGroup.Dropdown.Dropdown--split.dropdown', {}, [\n            Button.component({\n                className: 'Button SplitDropdown-button MassSelectControl' + (count > 0 ? ' checked' : ''),\n                onclick() {\n                    if (app.current.get('mass-select')!.count() === 0) {\n                        app.current.get('mass-select')!.addAll();\n                    } else {\n                        app.current.get('mass-select')!.clear();\n                    }\n                },\n            }, icon(iconName)),\n            m('button.Dropdown-toggle.Button.Button--icon', {\n                'data-toggle': 'dropdown',\n            }, icon('fas fa-caret-down', {className: 'Button-caret'})),\n            m('ul.Dropdown-menu.dropdown-menu', listItems(controls.toArray())),\n        ]), 100);\n    });\n\n    extend(DiscussionListItem.prototype, 'view', function (vdom) {\n        // Only add the checkboxes on the index page, not the drawer\n        if (!app.current.matches(IndexPage) || !app.forum.attribute('massControls')) {\n            return;\n        }\n\n        vdom.children.forEach(vdom => {\n            if (vdom && vdom.attrs && vdom.attrs.className && vdom.attrs.className.indexOf('DiscussionListItem-content') !== -1) {\n                const state = app.current.get('mass-select')!;\n\n                vdom.children.unshift(m('.DiscussionListItem-select', Checkbox.component<CheckboxAttrs>({\n                    state: state.contains(this.attrs.discussion),\n                    onchange: event => {\n                        state.toggle(this.attrs.discussion, event.shiftKey);\n                    },\n                })));\n            }\n        });\n    });\n\n    extend(DiscussionListItem.prototype, 'oninit', function () {\n        this.subtree!.check(() => app.current.get('mass-select')?.contains(this.attrs.discussion));\n    });\n\n    extend(DiscussionListItem.prototype, 'elementAttrs', function (attrs) {\n        if (app.current.get('mass-select')?.contains(this.attrs.discussion)) {\n            attrs.className += ' DiscussionListItem--selected';\n        }\n    });\n\n    extend(IndexPage.prototype, 'oninit', function () {\n        app.current.set('mass-select', new SelectState('discussions'));\n    });\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport Button from 'flarum/common/components/Button';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport Discussion from 'flarum/common/models/Discussion';\nimport extractText from 'flarum/common/utils/extractText';\nimport proxyModels from './utils/proxyModels';\nimport IconButton from './components/IconButton';\n\nexport default function () {\n    extend(IndexPage.prototype, 'actionItems', function (items) {\n        const select = app.current.get('mass-select');\n        if (!select || select.count() === 0) {\n            return;\n        }\n\n        // Remove global actions\n        items.remove('refresh');\n        items.remove('markAllAsRead');\n\n        items.add('mass-markAsRead', m(IconButton, {\n            title: app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.markAsRead'),\n            icon: 'fas fa-check',\n            onclick() {\n                select.forEachPromise<Discussion>(discussion => {\n                    // Same code as in DiscussionListItem\n                    if (discussion.isUnread()) {\n                        return discussion.save({lastReadPostNumber: discussion.lastPostNumber()});\n                    }\n\n                    return Promise.resolve();\n                }).then(() => {\n                    m.redraw();\n                });\n            },\n        }));\n\n        const anyHidden = select.some<Discussion>(discussion => {\n            return discussion.isHidden();\n        });\n\n        if (app.forum.attribute('canHideDiscussionsSometime')) {\n            items.add('mass-hide', m(IconButton, {\n                title: anyHidden ? app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.restore') : app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.hide'),\n                icon: anyHidden ? 'fas fa-reply' : 'fas fa-trash-alt',\n                onclick() {\n                    select.forEachPromise<Discussion>(discussion => {\n                        if (!discussion.canHide()) {\n                            return Promise.resolve();\n                        }\n\n                        if (anyHidden) {\n                            return DiscussionControls.restoreAction.call(discussion);\n                        } else {\n                            return DiscussionControls.hideAction.call(discussion);\n                        }\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n                disabled: !select.some<Discussion>(discussion => {\n                    return !!discussion.canHide();\n                }),\n            }));\n        }\n\n        if (app.forum.attribute('canDeleteDiscussionsSometime') && anyHidden) {\n            // Make a more accurate count of what exactly we will attempt to delete\n            // so the confirmation message is not misleading\n            const count = select.all<Discussion>().filter(discussion => discussion.canDelete() && discussion.isHidden()).length;\n\n            items.add('mass-delete', m(IconButton, {\n                title: app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.delete'),\n                icon: 'fas fa-times',\n                onclick() {\n                    // We can't call DiscussionControls.deleteAction as it would show a confirmation message for every selected discussion\n                    // Instead we manually do the same thing with a single confirmation\n                    if (!confirm(extractText(app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.deleteConfirmation', {\n                        count,\n                    })))) {\n                        return;\n                    }\n\n                    select.forEachPromise<Discussion>(discussion => {\n                        if (!discussion.canDelete() || !discussion.isHidden()) {\n                            return Promise.resolve();\n                        }\n\n                        return discussion.delete().then(() => app.discussions.removeDiscussion(discussion));\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n                disabled: count === 0,\n            }));\n        }\n\n        if (app.forum.attribute('canLockDiscussionsSometime')) {\n            const anyLocked = select.some(discussion => {\n                return discussion.attribute('isLocked');\n            });\n\n            items.add('mass-lock', m(IconButton, {\n                title: anyLocked ? app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.unlock') : app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.lock'),\n                icon: anyLocked ? 'fas fa-unlock' : 'fas fa-lock',\n                onclick() {\n                    select.forEachPromise(discussion => {\n                        if (!discussion.attribute('canLock')) {\n                            return Promise.resolve();\n                        }\n\n                        // Re-implement DiscussionControls.lockAction to force lock or unlock instead of toggling\n                        return discussion.save({isLocked: !anyLocked});\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n                disabled: !select.some(discussion => {\n                    return discussion.attribute('canLock');\n                }),\n            }));\n        }\n\n        if (app.forum.attribute('canStickyDiscussionsSometime')) {\n            const anySticky = select.some(discussion => {\n                return discussion.attribute('isSticky');\n            });\n\n            items.add('mass-lock', m(IconButton, {\n                title: anySticky ? app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.unsticky') : app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.sticky'),\n                icon: 'fas fa-thumbtack', // Unfortunately, there is no good alternate icon for on/off\n                onclick() {\n                    select.forEachPromise(discussion => {\n                        if (!discussion.attribute('canSticky')) {\n                            return Promise.resolve();\n                        }\n\n                        return discussion.save({isSticky: !anySticky});\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n                disabled: !select.some(discussion => {\n                    return discussion.attribute('canSticky');\n                }),\n            }));\n        }\n\n        if (app.forum.attribute('canTagDiscussionsSometime')) {\n            items.add('mass-tags', Dropdown.component({\n                buttonClassName: 'Button',\n                label: app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.tags'),\n                disabled: !select.some(discussion => {\n                    return discussion.attribute('canTag');\n                }),\n            }, [\n                Button.component({\n                    onclick() {\n                        app.modal.show(flarum.core.compat['tags/forum/components/TagDiscussionModal'], {\n                            discussion: proxyModels(select.all()),\n                        });\n                    },\n                }, app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.tags-edit')),\n                app.store.all('tags').map(tag => Button.component({\n                    onclick() {\n                        select.forEachPromise(discussion => {\n                            if (!discussion.attribute('canTag')) {\n                                return Promise.resolve();\n                            }\n\n                            const tags = discussion.tags() || [];\n\n                            // If discussion already has this tag, skip\n                            if (tags.some(thisTag => thisTag.id() === tag.id())) {\n                                return Promise.resolve();\n                            }\n\n                            tags.push(tag);\n\n                            return discussion.save({relationships: {tags}})\n                        }).then(() => {\n                            m.redraw();\n                        });\n                    },\n                }, app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.tags-add', {\n                    tag: tag.name(),\n                }))),\n            ]));\n        }\n    });\n}\n","import Model from 'flarum/common/Model';\n\nexport default function proxyModels(models: Model[]) {\n    return new Proxy(models[0], {\n        get(target, prop, receiver) {\n            if (prop === 'save') {\n                return (attributes: any, options = {}) => {\n                    return Promise.all(models.map(model => model.save({...attributes}, {...options})));\n                };\n            }\n\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\n","import {override} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Store from 'flarum/common/Store';\n\nexport default function () {\n    // Automatically remove a model from the selection if it's disabled from the store\n    // This prevents the forEach()/some() methods on the selection to include undefined after a model is permanently deleted\n    override(Store.prototype, 'remove', function (original, model) {\n        const select = app.current.get('mass-select');\n\n        if (select && select.type === model.data.type) {\n            select.remove(model);\n        }\n\n        return original(model);\n    });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","__proto__","Checkbox","subClass","superClass","create","constructor","view","m","className","this","attrs","state","role","onclick","onchange","icon","Component","SelectState","type","ids","rangeStartId","indexOf","model","id","contains","toggle","shift","candidates","allCandidates","startModel","app","startIndex","endIndex","slice","forEach","remove","add","bind","index","push","splice","items","page","addAll","filter","clear","count","length","callbackWithModel","callback","forEachPromise","Promise","all","map","some","_extends","assign","target","i","arguments","source","apply","IconButton","vnode","Tooltip","text","title","Button","disabled","extend","Dropdown","IndexPage","controls","ItemList","iconName","reduce","total","isRead","isUnread","isHidden","extensions","attribute","listItems","toArray","DiscussionListItem","vdom","children","unshift","component","discussion","event","shiftKey","subtree","check","select","save","lastReadPostNumber","lastPostNumber","resolve","then","redraw","anyHidden","canHide","DiscussionControls","canDelete","confirm","extractText","anyLocked","isLocked","anySticky","isSticky","buttonClassName","label","models","Proxy","receiver","attributes","options","Reflect","tag","tags","thisTag","relationships","name","override","Store","original","data"],"sourceRoot":""}