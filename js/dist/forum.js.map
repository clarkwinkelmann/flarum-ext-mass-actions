{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@clarkwinkelmann/mass-actions/webpack/bootstrap","webpack://@clarkwinkelmann/mass-actions/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/mass-actions/webpack/runtime/define property getters","webpack://@clarkwinkelmann/mass-actions/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/mass-actions/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/helpers/listItems']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/components/DiscussionsUserPage']\"","webpack://@clarkwinkelmann/mass-actions/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/Component']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@clarkwinkelmann/mass-actions/./src/forum/components/Checkbox.ts","webpack://@clarkwinkelmann/mass-actions/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/mass-actions/./src/forum/utils/SelectState.ts","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/mass-actions/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@clarkwinkelmann/mass-actions/./src/forum/utils/proxyModels.ts","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@clarkwinkelmann/mass-actions/./src/forum/components/IconButton.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/utils/discussionActionControls.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/utils/discussionViewControls.ts","webpack://@clarkwinkelmann/mass-actions/external root \"flarum.core.compat['common/Store']\"","webpack://@clarkwinkelmann/mass-actions/./src/forum/index.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/patchCoreComponents.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/addDiscussionControls.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/addDiscussionActions.ts","webpack://@clarkwinkelmann/mass-actions/./src/forum/automaticallyRemoveFromStore.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/listItems'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionsUserPage'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","import Component, {ComponentAttrs} from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\n\nexport interface CheckboxAttrs extends ComponentAttrs {\n    state: boolean\n    onchange: (event: MouseEvent) => void\n}\n\nexport default class Checkbox extends Component<CheckboxAttrs> {\n    view() {\n        return m('.MassSelectControl', {\n            className: this.attrs.state ? 'checked' : '',\n            role: 'checkbox',\n            onclick: this.attrs.onchange,\n        }, icon(this.attrs.state ? 'fas fa-check-square' : 'far fa-square'));\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Model from 'flarum/common/Model';\nimport app from 'flarum/forum/app';\nimport PaginatedListState from 'flarum/common/states/PaginatedListState';\n\nexport default class SelectState {\n    type: string\n    ids: string[] = []\n    rangeStartId: string | null = null\n    listState: PaginatedListState<Model> | null = null\n\n    constructor(type: string) {\n        this.type = type;\n    }\n\n    private indexOf(model: Model) {\n        return this.ids.indexOf(model.id() || '');\n    }\n\n    contains(model: Model): boolean {\n        return this.indexOf(model) !== -1;\n    }\n\n    toggle(model: Model, shift: boolean = false): void {\n        if (!model.id()) {\n            throw 'Missing ID in model';\n        }\n\n        if (shift && this.rangeStartId) {\n            const candidates = this.allCandidates();\n            const startModel = app.store.getById(this.type, this.rangeStartId)!;\n\n            let startIndex = candidates.indexOf(startModel);\n            let endIndex = candidates.indexOf(model);\n\n            if (startIndex >= 0 && endIndex >= 0 && this.contains(startModel) !== this.contains(model)) {\n                // Allow selection in both directions, switch indexes for use in slice() below\n                if (startIndex > endIndex) {\n                    [startIndex, endIndex] = [endIndex, startIndex];\n                }\n\n                candidates.slice(startIndex, endIndex + 1).forEach((this.contains(model) ? this.remove : this.add).bind(this));\n\n                return;\n            }\n        }\n\n        const index = this.indexOf(model);\n\n        if (index === -1) {\n            this.ids.push(model.id()!);\n        } else {\n            this.ids.splice(index, 1);\n        }\n\n        this.rangeStartId = model.id()!;\n    }\n\n    add(model: Model): void {\n        if (!model.id()) {\n            throw 'Missing ID in model';\n        }\n\n        if (!this.contains(model)) {\n            this.ids.push(model.id()!);\n        }\n    }\n\n    remove(model: Model): void {\n        if (!model.id()) {\n            throw 'Missing ID in model';\n        }\n\n        const index = this.indexOf(model);\n\n        if (index !== -1) {\n            this.ids.splice(index, 1);\n        }\n    }\n\n    private allCandidates(): Model[] {\n        const items: Model[] = [];\n\n        const state = this.listState || app.discussions;\n\n        state.getPages().forEach(page => {\n            items.push(...page.items);\n        });\n\n        return items;\n    }\n\n    setListState(state: PaginatedListState<Model>) {\n        this.listState = state;\n    }\n\n    addAll(filter: (model: Model) => boolean = () => true): void {\n        this.allCandidates().forEach(model => {\n            if (filter(model)) {\n                this.add(model);\n            }\n        });\n        this.rangeStartId = null;\n    }\n\n    clear(): void {\n        this.ids = [];\n        this.rangeStartId = null;\n    }\n\n    count(): number {\n        return this.ids.length;\n    }\n\n    private callbackWithModel<M extends Model = Model, T = void>(callback: (model: M) => T): (id: string) => T {\n        return (id: string) => {\n            return callback(app.store.getById(this.type, id)!);\n        }\n    }\n\n    forEach(callback: (model: Model) => void): void {\n        this.ids.forEach(this.callbackWithModel(callback));\n    }\n\n    forEachPromise<M extends Model = Model>(callback: (model: M) => Promise<any>): Promise<any> {\n        return Promise.all(this.ids.map(this.callbackWithModel<M>(callback)));\n    }\n\n    some<M extends Model = Model>(callback: (model: M) => boolean): boolean {\n        return this.ids.some(this.callbackWithModel<M, boolean>(callback));\n    }\n\n    all<M extends Model = Model>(): M[] {\n        return this.ids.map(id => app.store.getById(this.type, id)!);\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import Model from 'flarum/common/Model';\n\nexport default function proxyModels(models: Model[]) {\n    return new Proxy(models[0], {\n        get(target, prop, receiver) {\n            if (prop === 'save') {\n                return (attributes: any, options = {}) => {\n                    return Promise.all(models.map(model => model.save({...attributes}, {...options})));\n                };\n            }\n\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import {ClassComponent, Vnode} from 'mithril';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport Button from 'flarum/common/components/Button';\n\ninterface IconButtonAttrs {\n    title: any\n    icon: string\n    onclick: () => void\n    disabled?: boolean\n}\n\n/**\n * Since every one of our buttons will need a tooltip and same class name, a re-usable component makes sense\n * Particularly because the title text needs to be injected in 2 places\n */\nexport default class IconButton implements ClassComponent<IconButtonAttrs> {\n    view(vnode: Vnode<IconButtonAttrs, this>) {\n        return Tooltip.component({\n            text: vnode.attrs.title,\n        }, Button.component({\n            'aria-label': vnode.attrs.title,\n            icon: vnode.attrs.icon,\n            className: 'Button Button--icon',\n            onclick: vnode.attrs.onclick,\n            disabled: vnode.attrs.disabled,\n        }));\n    }\n}\n","import app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport Discussion from 'flarum/common/models/Discussion';\nimport extractText from 'flarum/common/utils/extractText';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport proxyModels from './proxyModels';\nimport IconButton from '../components/IconButton';\n\nexport default function (items: ItemList<any>): ItemList<any> {\n    const select = app.current.get('mass-select');\n    if (!select || select.count() === 0) {\n        return items;\n    }\n\n    // Remove global actions\n    items.remove('refresh');\n    items.remove('markAllAsRead');\n\n    items.add('mass-markAsRead', m(IconButton, {\n        title: app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.markAsRead'),\n        icon: 'fas fa-check',\n        onclick() {\n            select.forEachPromise<Discussion>(discussion => {\n                // Same code as in DiscussionListItem\n                if (discussion.isUnread()) {\n                    return discussion.save({lastReadPostNumber: discussion.lastPostNumber()});\n                }\n\n                return Promise.resolve();\n            }).then(() => {\n                m.redraw();\n            });\n        },\n    }));\n\n    const anyHidden = select.some<Discussion>(discussion => {\n        return discussion.isHidden();\n    });\n\n    if (app.forum.attribute('canHideDiscussionsSometime')) {\n        items.add('mass-hide', m(IconButton, {\n            title: anyHidden ? app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.restore') : app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.hide'),\n            icon: anyHidden ? 'fas fa-reply' : 'fas fa-trash-alt',\n            onclick() {\n                select.forEachPromise<Discussion>(discussion => {\n                    if (!discussion.canHide()) {\n                        return Promise.resolve();\n                    }\n\n                    if (anyHidden) {\n                        return DiscussionControls.restoreAction.call(discussion);\n                    } else {\n                        return DiscussionControls.hideAction.call(discussion);\n                    }\n                }).then(() => {\n                    m.redraw();\n                });\n            },\n            disabled: !select.some<Discussion>(discussion => {\n                return !!discussion.canHide();\n            }),\n        }));\n    }\n\n    if (app.forum.attribute('canDeleteDiscussionsSometime') && anyHidden) {\n        // Make a more accurate count of what exactly we will attempt to delete\n        // so the confirmation message is not misleading\n        const count = select.all<Discussion>().filter(discussion => discussion.canDelete() && discussion.isHidden()).length;\n\n        items.add('mass-delete', m(IconButton, {\n            title: app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.delete'),\n            icon: 'fas fa-times',\n            onclick() {\n                // We can't call DiscussionControls.deleteAction as it would show a confirmation message for every selected discussion\n                // Instead we manually do the same thing with a single confirmation\n                if (!confirm(extractText(app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.deleteConfirmation', {\n                    count,\n                })))) {\n                    return;\n                }\n\n                select.forEachPromise<Discussion>(discussion => {\n                    if (!discussion.canDelete() || !discussion.isHidden()) {\n                        return Promise.resolve();\n                    }\n\n                    return discussion.delete().then(() => app.discussions.removeDiscussion(discussion));\n                }).then(() => {\n                    m.redraw();\n                });\n            },\n            disabled: count === 0,\n        }));\n    }\n\n    if (app.forum.attribute('canLockDiscussionsSometime')) {\n        const anyLocked = select.some(discussion => {\n            return discussion.attribute('isLocked');\n        });\n\n        items.add('mass-lock', m(IconButton, {\n            title: anyLocked ? app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.unlock') : app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.lock'),\n            icon: anyLocked ? 'fas fa-unlock' : 'fas fa-lock',\n            onclick() {\n                select.forEachPromise(discussion => {\n                    if (!discussion.attribute('canLock')) {\n                        return Promise.resolve();\n                    }\n\n                    // Re-implement DiscussionControls.lockAction to force lock or unlock instead of toggling\n                    return discussion.save({isLocked: !anyLocked});\n                }).then(() => {\n                    m.redraw();\n                });\n            },\n            disabled: !select.some(discussion => {\n                return discussion.attribute('canLock');\n            }),\n        }));\n    }\n\n    if (app.forum.attribute('canStickyDiscussionsSometime')) {\n        const anySticky = select.some(discussion => {\n            return discussion.attribute('isSticky');\n        });\n\n        items.add('mass-sticky', m(IconButton, {\n            title: anySticky ? app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.unsticky') : app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.sticky'),\n            icon: 'fas fa-thumbtack', // Unfortunately, there is no good alternate icon for on/off\n            onclick() {\n                select.forEachPromise(discussion => {\n                    if (!discussion.attribute('canSticky')) {\n                        return Promise.resolve();\n                    }\n\n                    return discussion.save({isSticky: !anySticky});\n                }).then(() => {\n                    m.redraw();\n                });\n            },\n            disabled: !select.some(discussion => {\n                return discussion.attribute('canSticky');\n            }),\n        }));\n    }\n\n    if (app.forum.attribute('canTagDiscussionsSometime')) {\n        items.add('mass-tags', Dropdown.component({\n            buttonClassName: 'Button',\n            label: app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.tags'),\n            disabled: !select.some(discussion => {\n                return discussion.attribute('canTag');\n            }),\n        }, [\n            Button.component({\n                onclick() {\n                    app.modal.show(flarum.core.compat['tags/forum/components/TagDiscussionModal'], {\n                        discussion: proxyModels(select.all()),\n                    });\n                },\n            }, app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.tags-edit')),\n            app.store.all('tags').map(tag => Button.component({\n                onclick() {\n                    select.forEachPromise(discussion => {\n                        if (!discussion.attribute('canTag')) {\n                            return Promise.resolve();\n                        }\n\n                        const tags = discussion.tags() || [];\n\n                        // If discussion already has this tag, skip\n                        if (tags.some(thisTag => thisTag.id() === tag.id())) {\n                            return Promise.resolve();\n                        }\n\n                        tags.push(tag);\n\n                        return discussion.save({relationships: {tags}})\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n            }, app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.tags-add', {\n                tag: tag.name(),\n            }))),\n        ]));\n    }\n\n    return items;\n}\n","import app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport icon from 'flarum/common/helpers/icon';\nimport listItems from 'flarum/common/helpers/listItems';\nimport Discussion from 'flarum/common/models/Discussion';\n\nexport default function (items: ItemList<any>): ItemList<any> {\n    const controls = new ItemList();\n\n    let iconName = 'far fa-square';\n    const count = app.current.get('mass-select')!.count();\n\n    if (count > 0) {\n        if (count === app.discussions.getPages().reduce((total, page) => total + page.items.length, 0)) {\n            iconName = 'fas fa-check-square';\n        } else {\n            iconName = 'fas fa-minus-square';\n        }\n    }\n\n    controls.add('all', Button.component({\n        onclick() {\n            app.current.get('mass-select')!.addAll();\n        },\n    }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.all')));\n\n    controls.add('clear', Button.component({\n        onclick() {\n            app.current.get('mass-select')!.clear();\n        },\n    }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.none')));\n\n    controls.add('read', Button.component({\n        onclick() {\n            app.current.get('mass-select')!.clear();\n            app.current.get('mass-select')!.addAll(model => {\n                return (model as Discussion).isRead();\n            });\n        },\n    }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.read')));\n\n    controls.add('unread', Button.component({\n        onclick() {\n            app.current.get('mass-select')!.clear();\n            app.current.get('mass-select')!.addAll(model => {\n                return (model as Discussion).isUnread();\n            });\n        },\n    }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.unread')));\n\n    controls.add('visible', Button.component({\n        onclick() {\n            app.current.get('mass-select')!.clear();\n            app.current.get('mass-select')!.addAll(model => {\n                return !(model as Discussion).isHidden();\n            });\n        },\n    }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.visible')));\n\n    controls.add('hidden', Button.component({\n        onclick() {\n            app.current.get('mass-select')!.clear();\n            app.current.get('mass-select')!.addAll(model => {\n                return (model as Discussion).isHidden();\n            });\n        },\n    }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.hidden')));\n\n    if ('flarum-lock' in flarum.extensions) {\n        controls.add('locked', Button.component({\n            onclick() {\n                app.current.get('mass-select')!.clear();\n                app.current.get('mass-select')!.addAll(model => {\n                    return model.attribute('isLocked');\n                });\n            },\n        }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.locked')));\n\n        controls.add('unlocked', Button.component({\n            onclick() {\n                app.current.get('mass-select')!.clear();\n                app.current.get('mass-select')!.addAll(model => {\n                    return !model.attribute('isLocked');\n                });\n            },\n        }, app.translator.trans('clarkwinkelmann-mass-actions.forum.select.unlocked')));\n    }\n\n    // We don't use Flarum's SplitDropdown because the children of the first button aren't redrawing properly\n    items.add('mass-select', m('.ButtonGroup.Dropdown.Dropdown--split.dropdown', {}, [\n        Button.component({\n            className: 'Button SplitDropdown-button MassSelectControl' + (count > 0 ? ' checked' : ''),\n            onclick() {\n                if (app.current.get('mass-select')!.count() === 0) {\n                    app.current.get('mass-select')!.addAll();\n                } else {\n                    app.current.get('mass-select')!.clear();\n                }\n            },\n        }, icon(iconName)),\n        m('button.Dropdown-toggle.Button.Button--icon', {\n            'data-toggle': 'dropdown',\n        }, icon('fas fa-caret-down', {className: 'Button-caret'})),\n        m('ul.Dropdown-menu.dropdown-menu', listItems(controls.toArray())),\n    ]), 100);\n\n    return items;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Store'];","import app from 'flarum/forum/app';\nimport patchCoreComponents from './patchCoreComponents';\nimport addDiscussionControls from './addDiscussionControls';\nimport addDiscussionActions from './addDiscussionActions';\nimport automaticallyRemoveFromStore from './automaticallyRemoveFromStore';\n\napp.initializers.add('mass-actions', () => {\n    patchCoreComponents();\n    addDiscussionControls();\n    addDiscussionActions();\n    automaticallyRemoveFromStore();\n});\n","import {extend} from 'flarum/common/extend';\nimport Dropdown from 'flarum/common/components/Dropdown';\n\nexport default function () {\n    // Flarum's Dropdown component doesn't support disabled state out of the box\n    extend(Dropdown.prototype, 'getButton', function (vnode) {\n        // @ts-ignore\n        vnode.attrs.disabled = this.attrs.disabled;\n    });\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport listItems from 'flarum/common/helpers/listItems';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport DiscussionsUserPage from 'flarum/forum/components/DiscussionsUserPage';\nimport Checkbox, {CheckboxAttrs} from './components/Checkbox';\nimport SelectState from './utils/SelectState';\nimport discussionActionControls from './utils/discussionActionControls';\nimport discussionViewControls from './utils/discussionViewControls';\n\nexport default function () {\n    extend(IndexPage.prototype, 'oninit', function () {\n        app.current.set('mass-select', new SelectState('discussions'));\n    });\n\n    extend(IndexPage.prototype, 'viewItems', function (items) {\n        if (!app.forum.attribute('massControls')) {\n            return;\n        }\n\n        discussionViewControls(items);\n    });\n\n    extend(IndexPage.prototype, 'actionItems', function (items) {\n        if (!app.forum.attribute('massControls')) {\n            return;\n        }\n\n        discussionActionControls(items);\n    });\n\n    extend(DiscussionsUserPage.prototype, 'show', function () {\n        app.current.set('mass-select', new SelectState('discussions'));\n        app.current.get('mass-select')!.setListState(this.state!);\n    });\n\n    extend(DiscussionsUserPage.prototype, 'content', function (vdom) {\n        if (!app.forum.attribute('massControls')) {\n            return;\n        }\n\n        vdom.children.unshift(m('.IndexPage-toolbar', [\n            m('.IndexPage-toolbar-view', listItems(discussionViewControls(new ItemList()).toArray())),\n            m('.IndexPage-toolbar-action', listItems(discussionActionControls(new ItemList()).toArray())),\n        ]));\n    });\n\n    extend(DiscussionListItem.prototype, 'view', function (vdom) {\n        // Only add the checkboxes on the index+user pages, not the drawer\n        if (!(app.current.matches(IndexPage) || app.current.matches(DiscussionsUserPage)) || !app.forum.attribute('massControls')) {\n            return;\n        }\n\n        vdom.children.forEach(vdom => {\n            if (vdom && vdom.attrs && vdom.attrs.className && vdom.attrs.className.indexOf('DiscussionListItem-content') !== -1) {\n                const state = app.current.get('mass-select')!;\n\n                vdom.children.unshift(m('.DiscussionListItem-select', Checkbox.component<CheckboxAttrs>({\n                    state: state.contains(this.attrs.discussion),\n                    onchange: event => {\n                        state.toggle(this.attrs.discussion, event.shiftKey);\n                    },\n                })));\n            }\n        });\n    });\n\n    extend(DiscussionListItem.prototype, 'oninit', function () {\n        this.subtree!.check(() => app.current.get('mass-select')?.contains(this.attrs.discussion));\n    });\n\n    extend(DiscussionListItem.prototype, 'elementAttrs', function (attrs) {\n        if (app.current.get('mass-select')?.contains(this.attrs.discussion)) {\n            attrs.className += ' DiscussionListItem--selected';\n        }\n    });\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport Button from 'flarum/common/components/Button';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport Discussion from 'flarum/common/models/Discussion';\nimport extractText from 'flarum/common/utils/extractText';\nimport proxyModels from './utils/proxyModels';\nimport IconButton from './components/IconButton';\n\nexport default function () {\n    extend(IndexPage.prototype, 'actionItems', function (items) {\n        const select = app.current.get('mass-select');\n        if (!select || select.count() === 0) {\n            return;\n        }\n\n        // Remove global actions\n        items.remove('refresh');\n        items.remove('markAllAsRead');\n\n        items.add('mass-markAsRead', m(IconButton, {\n            title: app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.markAsRead'),\n            icon: 'fas fa-check',\n            onclick() {\n                select.forEachPromise<Discussion>(discussion => {\n                    // Same code as in DiscussionListItem\n                    if (discussion.isUnread()) {\n                        return discussion.save({lastReadPostNumber: discussion.lastPostNumber()});\n                    }\n\n                    return Promise.resolve();\n                }).then(() => {\n                    m.redraw();\n                });\n            },\n        }));\n\n        const anyHidden = select.some<Discussion>(discussion => {\n            return discussion.isHidden();\n        });\n\n        if (app.forum.attribute('canHideDiscussionsSometime')) {\n            items.add('mass-hide', m(IconButton, {\n                title: anyHidden ? app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.restore') : app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.hide'),\n                icon: anyHidden ? 'fas fa-reply' : 'fas fa-trash-alt',\n                onclick() {\n                    select.forEachPromise<Discussion>(discussion => {\n                        if (!discussion.canHide()) {\n                            return Promise.resolve();\n                        }\n\n                        if (anyHidden) {\n                            return DiscussionControls.restoreAction.call(discussion);\n                        } else {\n                            return DiscussionControls.hideAction.call(discussion);\n                        }\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n                disabled: !select.some<Discussion>(discussion => {\n                    return !!discussion.canHide();\n                }),\n            }));\n        }\n\n        if (app.forum.attribute('canDeleteDiscussionsSometime') && anyHidden) {\n            // Make a more accurate count of what exactly we will attempt to delete\n            // so the confirmation message is not misleading\n            const count = select.all<Discussion>().filter(discussion => discussion.canDelete() && discussion.isHidden()).length;\n\n            items.add('mass-delete', m(IconButton, {\n                title: app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.delete'),\n                icon: 'fas fa-times',\n                onclick() {\n                    // We can't call DiscussionControls.deleteAction as it would show a confirmation message for every selected discussion\n                    // Instead we manually do the same thing with a single confirmation\n                    if (!confirm(extractText(app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.deleteConfirmation', {\n                        count,\n                    })))) {\n                        return;\n                    }\n\n                    select.forEachPromise<Discussion>(discussion => {\n                        if (!discussion.canDelete() || !discussion.isHidden()) {\n                            return Promise.resolve();\n                        }\n\n                        return discussion.delete().then(() => app.discussions.removeDiscussion(discussion));\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n                disabled: count === 0,\n            }));\n        }\n\n        if (app.forum.attribute('canLockDiscussionsSometime')) {\n            const anyLocked = select.some(discussion => {\n                return discussion.attribute('isLocked');\n            });\n\n            items.add('mass-lock', m(IconButton, {\n                title: anyLocked ? app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.unlock') : app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.lock'),\n                icon: anyLocked ? 'fas fa-unlock' : 'fas fa-lock',\n                onclick() {\n                    select.forEachPromise(discussion => {\n                        if (!discussion.attribute('canLock')) {\n                            return Promise.resolve();\n                        }\n\n                        // Re-implement DiscussionControls.lockAction to force lock or unlock instead of toggling\n                        return discussion.save({isLocked: !anyLocked});\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n                disabled: !select.some(discussion => {\n                    return discussion.attribute('canLock');\n                }),\n            }));\n        }\n\n        if (app.forum.attribute('canStickyDiscussionsSometime')) {\n            const anySticky = select.some(discussion => {\n                return discussion.attribute('isSticky');\n            });\n\n            items.add('mass-sticky', m(IconButton, {\n                title: anySticky ? app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.unsticky') : app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.sticky'),\n                icon: 'fas fa-thumbtack', // Unfortunately, there is no good alternate icon for on/off\n                onclick() {\n                    select.forEachPromise(discussion => {\n                        if (!discussion.attribute('canSticky')) {\n                            return Promise.resolve();\n                        }\n\n                        return discussion.save({isSticky: !anySticky});\n                    }).then(() => {\n                        m.redraw();\n                    });\n                },\n                disabled: !select.some(discussion => {\n                    return discussion.attribute('canSticky');\n                }),\n            }));\n        }\n\n        if (app.forum.attribute('canTagDiscussionsSometime')) {\n            items.add('mass-tags', Dropdown.component({\n                buttonClassName: 'Button',\n                label: app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.tags'),\n                disabled: !select.some(discussion => {\n                    return discussion.attribute('canTag');\n                }),\n            }, [\n                Button.component({\n                    onclick() {\n                        app.modal.show(flarum.core.compat['tags/forum/components/TagDiscussionModal'], {\n                            discussion: proxyModels(select.all()),\n                        });\n                    },\n                }, app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.tags-edit')),\n                app.store.all('tags').map(tag => Button.component({\n                    onclick() {\n                        select.forEachPromise(discussion => {\n                            if (!discussion.attribute('canTag')) {\n                                return Promise.resolve();\n                            }\n\n                            const tags = discussion.tags() || [];\n\n                            // If discussion already has this tag, skip\n                            if (tags.some(thisTag => thisTag.id() === tag.id())) {\n                                return Promise.resolve();\n                            }\n\n                            tags.push(tag);\n\n                            return discussion.save({relationships: {tags}})\n                        }).then(() => {\n                            m.redraw();\n                        });\n                    },\n                }, app.translator.trans('clarkwinkelmann-mass-actions.forum.actions.tags-add', {\n                    tag: tag.name(),\n                }))),\n            ]));\n        }\n    });\n}\n","import {override} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport Store from 'flarum/common/Store';\n\nexport default function () {\n    // Automatically remove a model from the selection if it's disabled from the store\n    // This prevents the forEach()/some() methods on the selection to include undefined after a model is permanently deleted\n    override(Store.prototype, 'remove', function (original, model) {\n        const select = app.current.get('mass-select');\n\n        if (select && select.type === model.data.type) {\n            select.remove(model);\n        }\n\n        return original(model);\n    });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","Checkbox","subClass","superClass","create","constructor","view","m","className","this","attrs","state","role","onclick","onchange","icon","Component","SelectState","type","ids","rangeStartId","listState","indexOf","model","id","contains","toggle","shift","candidates","allCandidates","startModel","app","startIndex","endIndex","slice","forEach","remove","add","index","push","splice","items","getPages","page","setListState","addAll","filter","clear","count","length","callbackWithModel","callback","forEachPromise","Promise","all","map","some","_extends","assign","target","i","arguments","source","apply","proxyModels","models","Proxy","receiver","attributes","options","save","Reflect","IconButton","vnode","Tooltip","text","title","Button","disabled","select","discussion","isUnread","lastReadPostNumber","lastPostNumber","resolve","then","redraw","anyHidden","isHidden","canHide","DiscussionControls","canDelete","confirm","extractText","anyLocked","attribute","isLocked","anySticky","isSticky","Dropdown","buttonClassName","label","tag","tags","thisTag","relationships","name","controls","ItemList","iconName","reduce","total","isRead","extensions","listItems","toArray","extend","IndexPage","discussionViewControls","discussionActionControls","DiscussionsUserPage","vdom","children","unshift","DiscussionListItem","component","event","shiftKey","subtree","check","override","Store","original","data"],"sourceRoot":""}